{"version":3,"sources":["images/banner.png","config/constants/settings.js","hooks/useWeb3.js","hooks/useContract.js","contexts/RefreshContext.js","hooks/useRefresh.js","hooks/useBuyNft.js","App.js","reportWebVitals.js","state/index.js","utils/web3.js","contexts/BlockContext.js","Providers.js","index.js"],"names":["RPC_URL","settings","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","usePunkTrunks","punkTrunksAbi","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","setSlow","setFast","interval","setInterval","a","prev","clearInterval","Provider","value","useRefresh","useContext","fastRefresh","slowRefresh","buy","punkContract","account","amount","methods","NFT_PRICE","call","ongoing","console","log","BigNumber","times","div","toFixed","mint","send","from","on","tx","transactionHash","buyWhitelist","mintPresale","App","setPendingTx","connect","reset","balance","quantity","setQuantity","punkTrunksContract","handleHarvest","useCallback","onBuyNft","useBuyNft","onBuyWhitelistNft","useBuyWhitelistNft","totalSupply","setTotalSupply","supply","fetchTotalSupply","useTotalSupply","whitelistOngoing","whitelist","setWhitelist","presaleOngoing","fetchWhitelist","useWhitelistOpen","nftPrice","setNftPrice","fetchNftPrice","useNftPrice","window","localStorage","getItem","className","src","banner","alt","href","target","style","marginBottom","marginTop","fontWeight","textAlign","paddingTop","type","id","min","max","onChange","e","minWidth","paddingLeft","onClick","fontSize","substr","removeItem","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","devTools","process","reducer","getWeb3","BlockContext","BlockContextProvider","previousBlock","block","setBlock","getBlockNumber","blockNumber","Providers","rpcUrl","chainId","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.263cb63d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.f74dc46d.png\";","export default {\n    contract: \"0xd7572A9F1B4Cd0F86f76254B8B83C9918612358d\",\n    rpcUrl: \"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\",\n    networkId: 1,\n    totalSupply: 10000\n}\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport settings from '../config/constants/settings'\n\n\nconst RPC_URL = settings.rpcUrl\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n    const { ethereum } = useWallet()\n    const refEth = useRef(ethereum)\n    const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n    useEffect(() => {\n        if (ethereum !== refEth.current) {\n            setweb3(new Web3(ethereum || httpProvider))\n            refEth.current = ethereum\n        }\n    }, [ethereum])\n\n    return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from './useWeb3.js'\nimport punkTrunksAbi from '../config/abi/PunkTrunks.json'\nimport settings from '../config/constants/settings.js'\n\nconst useContract = (abi, address, contractOptions = null) => {\n    const web3 = useWeb3()\n    const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n    useEffect(() => {\n        setContract(new web3.eth.Contract(abi, address, contractOptions))\n    }, [abi, address, contractOptions, web3])\n\n    return contract\n}\n\nexport const usePunkTrunks = () => {\n    const abi = punkTrunksAbi\n    return useContract(abi, settings.contract)\n}\n\n\nexport default useContract\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 3000\nconst SLOW_INTERVAL = 10000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from '../contexts/RefreshContext'\n\nconst useRefresh = () => {\n    const { fast, slow } = useContext(RefreshContext)\n    return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import React, {useEffect, Suspense, lazy, useState} from 'react'\nimport { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {useContract, usePunkTrunks} from \"./useContract.js\"\nimport useRefresh from './useRefresh'\nimport BigNumber from 'bignumber.js/bignumber'\n\nexport const useBuyNft = () => {\n    const { account } = useWallet()\n    const punkTrunksContract = usePunkTrunks()\n\n    const handleHarvest = useCallback(async (quantity) => {\n        return buy(punkTrunksContract, account, quantity)\n    }, [account, punkTrunksContract])\n\n    return { onBuyNft: handleHarvest }\n}\n\nexport const useBuyWhitelistNft = () => {\n    const { account } = useWallet()\n    const punkTrunksContract = usePunkTrunks()\n\n    const handleHarvest = useCallback(async (quantity) => {\n        console.log(quantity)\n        return buyWhitelist(punkTrunksContract, account, quantity)\n    }, [account, punkTrunksContract])\n\n    return { onBuyWhitelistNft: handleHarvest }\n}\n\nexport const buy = async (punkContract, account, amount) => {\n    const ongoing = await punkContract.methods.NFT_PRICE().call()\n    console.log('buying at price', ongoing)\n    const value = new BigNumber(ongoing).times(amount);\n    console.log('total of', value.div('1e18').toFixed())\n    return punkContract.methods\n        .mint(amount)\n        .send({ from: account, value})\n        .on('transactionHash', (tx) => {\n            return tx.transactionHash\n        })\n}\n\nexport const buyWhitelist = async (punkContract, account, amount) => {\n    const ongoing = await punkContract.methods.NFT_PRICE().call()\n    console.log('buying at price', ongoing)\n    const value = new BigNumber(ongoing).times(amount);\n    console.log('total of', value.div('1e18').toFixed())\n    return punkContract.methods\n        .mintPresale(amount)\n        .send({ from: account, value })\n        .on('transactionHash', (tx) => {\n            return tx.transactionHash\n        })\n}\n\nexport const useTotalSupply = () => {\n    const punkTrunksContract = usePunkTrunks()\n    const { slowRefresh } = useRefresh()\n    const [totalSupply, setTotalSupply] = useState(new BigNumber(0));\n\n    useEffect(() => {\n        console.log('refresh')\n        async function fetchTotalSupply() {\n            const supply = await punkTrunksContract.methods.totalSupply().call()\n            setTotalSupply(new BigNumber(supply))\n        }\n\n        fetchTotalSupply()\n    }, [slowRefresh, punkTrunksContract])\n\n    return totalSupply\n}\n\nexport const useWhitelistOpen = () => {\n    const punkTrunksContract = usePunkTrunks()\n    const { fastRefresh } = useRefresh()\n    const [whitelist, setWhitelist] = useState(false);\n\n    useEffect(() => {\n        console.log('refresh whitelist')\n        async function fetchWhitelist() {\n            const ongoing = await punkTrunksContract.methods.presaleOngoing().call()\n            setWhitelist(ongoing)\n        }\n\n        fetchWhitelist()\n    }, [fastRefresh, punkTrunksContract])\n\n    return whitelist\n}\n\n\nexport const useNftPrice = () => {\n    const punkTrunksContract = usePunkTrunks()\n    const { fastRefresh } = useRefresh()\n    const [nftPrice, setNftPrice] = useState(new BigNumber('0.1e18'));\n\n    useEffect(() => {\n        console.log('refresh price')\n        async function fetchNftPrice() {\n            const ongoing = await punkTrunksContract.methods.NFT_PRICE().call()\n            console.log('price')\n            console.log(ongoing)\n            setNftPrice(new BigNumber(ongoing).div('1e18'))\n        }\n\n        fetchNftPrice()\n    }, [fastRefresh, punkTrunksContract])\n\n    return nftPrice\n}\n","import React, {useEffect, Suspense, lazy, useState} from 'react'\nimport { useCallback } from 'react'\nimport banner from './images/banner.png';\nimport './App.css';\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport {useBuyNft, useTotalSupply, useWhitelistOpen, useNftPrice, useBuyWhitelistNft} from './hooks/useBuyNft.js'\nimport settings from './config/constants/settings.js'\n\nfunction App() {\n    const [pendingTx, setPendingTx] = useState(false)\n    const { account, connect, reset, balance } = useWallet()\n    const [quantity, setQuantity] = useState(1)\n    const { onBuyNft } = useBuyNft()\n    const { onBuyWhitelistNft } = useBuyWhitelistNft()\n    const totalSupply = useTotalSupply()\n    const whitelistOngoing = useWhitelistOpen()\n    const nftPrice = useNftPrice()\n\n    // const { location } = props;\n    // const { query } = getParams(location);\n\n    useEffect(() => {\n        console.log('account')\n        console.log(account)\n        console.log(window.localStorage.getItem('accountStatus'))\n        if (!account && window.localStorage.getItem('accountStatus')) {\n            console.log('asde')\n            connect('injected')\n        }\n    }, [account, connect])\n\n    const buyNft = useCallback(async () => {\n        setPendingTx(true)\n        try {\n            await onBuyNft(1)\n        } catch (error) {\n            // TODO: find a way to handle when the user rejects transaction or it fails\n        } finally {\n            setPendingTx(false)\n        }\n    }, [onBuyNft])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={banner} alt=\"banner\" className={'bannerImage'}/>\n      </header>\n      <div className={'container'}>\n          <div className={'row'}>\n              <div className={'col-md-12 text_block'}>\n                 <p>\n                     <a href={\"https://www.larvalabs.com/\"} target={'_blank'}>Larvalabs</a> paved the way for NFT’s and we respect the hell out of them.\n                     We love <a href={\"https://www.larvalabs.com/cryptopunks#\"} target={'_blank'}>Cryptopunks</a>,\n                      absolutely adore them. They were the ones who created them, but we’re going to land this on it’s feet.\n\n                      10,000 bodies for 10,000 punks. Your choice. Your unique body. Your complete PUNK. <a href={\"https://en.wikipedia.org/wiki/Ethereum\"} target={'_blank'}>Ethereum</a> network. Hand-drawn.\n\n\n                        <div style={{marginBottom:'80px', marginTop:'60px'}}>\n                            <h3 style={{fontWeight:'800', textAlign:'left'}}>Mint Information</h3>\n                            <div className={'row'}>\n                                <div className={'col-md-3'}>\n                                    Total Supply<br/>\n                                    <b>10,000</b>\n                                </div>\n                                <div className={'col-md-3'}>\n                                    Minted<br/>\n                                    <b>{totalSupply.toFixed()}/{settings.totalSupply}</b>\n                                </div>\n                                <div className={'col-md-3'}>\n                                    Max Mint per Tx<br/>\n                                    <b>100</b>\n                                </div>\n                                <div className={'col-md-3'}>\n                                    Mint price<br/>\n                                    <b>{nftPrice.toFixed()}Ξ</b>\n                                </div>\n                                <div className={'col-md-3'} style={{paddingTop:'20px'}}>\n                                    NFT Reveal<br/>\n                                    <b>Once sold out</b>\n                                </div>\n                                <div className={'col-md-3'} style={{paddingTop:'20px'}}>\n                                    Whitelist Mint Date<br/>\n                                    <b>November 1st, 7PM UTC</b>\n                                </div>\n                                <div className={'col-md-3'} style={{paddingTop:'20px'}}>\n                                    Public Mint Date<br/>\n                                    <b>November 2nd, 7PM UTC</b>\n                                </div>\n                            </div>\n                        </div>\n                     { !account ? (\n                         <div className={'text-center'}>\n                             <button onClick={() => {\n                                 connect('injected')\n                                 window.localStorage.setItem(\"accountStatus\", \"1\");\n                                }\n                             } type=\"button\" className=\"btn btn-primary\" >CONNECT</button>\n                         </div>\n                     ) : (\n                         <div className={'text-center'}>\n                             <p className={'text-center'}><b>{totalSupply.toFixed()}/{settings.totalSupply}</b></p>\n                             <br/>\n\n                             <input\n                                 type=\"number\" id=\"quantity\" data-bind=\"value:replyNumber\"  min=\"1\" max={'100'} onChange={e => setQuantity(e.target.value)} value={quantity}\n                                 style={{minWidth:'100px', paddingLeft:'10px'}}\n                             /> &nbsp;&nbsp;&nbsp;\n                             <button type=\"button\" className=\"btn btn-primary\" style={{marginBottom: '10px', marginTop: '8px'}}\n                                onClick={()=> {\n                                    if(whitelistOngoing) {\n                                        console.log(quantity)\n                                        onBuyWhitelistNft(quantity)\n                                    } else {\n                                        onBuyNft(quantity)\n                                    }\n                                }}\n                             >&nbsp;MINT&nbsp;</button><br/>\n\n                             {whitelistOngoing ? (\n                                 <span>Minting open to whitelist addresses. If you are not whitelisted, try again once minting is open to everyone</span>\n                             ) : (<span></span>)}\n\n                             <p style={{marginTop:0, textAlign:'center', fontSize: '0.7em'}}>logged in as {account.substr(0,6) + '...' + account.substr(-4, 4)}\n                             &nbsp;&nbsp;&nbsp; <a onClick={() => {\n                                    reset()\n                                     window.localStorage.removeItem('accountStatus')\n                                 }}>disconnect</a>  </p>\n                         </div>\n                     )}\n\n\n                 </p>\n              </div>\n          </div>\n\n      </div>\n        <footer className=\"footer\">\n            <div className=\"container\">\n                <a href={\"https://discord.gg/BPHxnEMbsJ\"} target={'_blank'}><i className=\"fab fa-discord\"></i></a> <a href={\"https://www.twitter.com/punktrunks\"} target={'_blank'}><i className=\"fab fa-twitter\"></i></a>\n            </div>\n        </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\n\nexport default configureStore({\n    devTools: process.env.NODE_ENV !== 'production',\n    reducer: {\n    },\n})\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport settings from '../config/constants/settings.js'\n\nconst RPC_URL = settings.rpcUrl\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 })\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n    return new Web3(httpProvider)\n}\nconst getContract = (abi, address, contractOptions = null) => {\n    const web3 = getWeb3()\n    return new web3.eth.Contract(abi, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from '../utils/web3.js'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import React from 'react'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\n\nimport store from './state/index'\nimport settings from './config/constants/settings.js'\nimport { BlockContextProvider } from './contexts/BlockContext'\nimport { RefreshContextProvider } from './contexts/RefreshContext'\n\nconst Providers = ({ children }) => {\n    const rpcUrl = settings.rpcUrl;\n    const chainId = settings.networkId;\n    return (\n        <Provider store={store}>\n            <BlockContextProvider>\n                <RefreshContextProvider>\n                    <bsc.UseWalletProvider\n                        chainId={chainId}\n                        connectors={{\n                            walletconnect: { rpcUrl },\n                            bsc,\n                        }}\n                    >\n                        {children}\n                    </bsc.UseWalletProvider>\n                </RefreshContextProvider>\n            </BlockContextProvider>\n        </Provider>\n    )\n}\n\nexport default Providers\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Providers>\n        <App />\n      </Providers>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}